# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindowgui.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow, lang):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(467, 410)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.vl_centralwidget = QtWidgets.QVBoxLayout(self.centralwidget)
        self.vl_centralwidget.setContentsMargins(4, 4, 4, 4)
        self.vl_centralwidget.setSpacing(2)
        self.vl_centralwidget.setObjectName("vl_centralwidget")
        self.toppanel = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toppanel.sizePolicy().hasHeightForWidth())
        self.toppanel.setSizePolicy(sizePolicy)
        self.toppanel.setMinimumSize(QtCore.QSize(0, 28))
        self.toppanel.setMaximumSize(QtCore.QSize(16777215, 28))
        self.toppanel.setObjectName("toppanel")
        self.hl_toppanel = QtWidgets.QHBoxLayout(self.toppanel)
        self.hl_toppanel.setContentsMargins(0, 0, 0, 0)
        self.hl_toppanel.setSpacing(4)
        self.hl_toppanel.setObjectName("hl_toppanel")
        self.l1 = QtWidgets.QLabel(self.toppanel)
        self.l1.setObjectName("l1")
        self.hl_toppanel.addWidget(self.l1)
        self.cbSource = QtWidgets.QComboBox(self.toppanel)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cbSource.sizePolicy().hasHeightForWidth())
        self.cbSource.setSizePolicy(sizePolicy)
        self.cbSource.setObjectName("cbSource")
        self.hl_toppanel.addWidget(self.cbSource)
        self.bUpdateSource = QtWidgets.QPushButton(self.toppanel)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bUpdateSource.sizePolicy().hasHeightForWidth())
        self.bUpdateSource.setSizePolicy(sizePolicy)
        self.bUpdateSource.setDefault(True)
        self.bUpdateSource.setObjectName("bUpdateSource")
        self.hl_toppanel.addWidget(self.bUpdateSource)
        self.bSet = QtWidgets.QToolButton(self.toppanel)
        self.bSet.setMinimumSize(QtCore.QSize(24, 24))
        self.bSet.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/set.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bSet.setIcon(icon)
        self.bSet.setCheckable(False)
        self.bSet.setAutoRepeat(False)
        self.bSet.setAutoExclusive(False)
        self.bSet.setPopupMode(QtWidgets.QToolButton.DelayedPopup)
        self.bSet.setAutoRaise(True)
        self.bSet.setObjectName("bSet")
        self.hl_toppanel.addWidget(self.bSet)
        self.bHelp = QtWidgets.QToolButton(self.toppanel)
        self.bHelp.setMinimumSize(QtCore.QSize(24, 24))
        self.bHelp.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/help.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bHelp.setIcon(icon1)
        self.bHelp.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.bHelp.setAutoRaise(True)
        self.bHelp.setObjectName("bHelp")
        self.hl_toppanel.addWidget(self.bHelp)
        self.vl_centralwidget.addWidget(self.toppanel)
        self.midpanel = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.midpanel.sizePolicy().hasHeightForWidth())
        self.midpanel.setSizePolicy(sizePolicy)
        self.midpanel.setObjectName("midpanel")
        self.hl_midpanel = QtWidgets.QHBoxLayout(self.midpanel)
        self.hl_midpanel.setContentsMargins(0, 6, 0, 0)
        self.hl_midpanel.setObjectName("hl_midpanel")
        self.leftpanel = QtWidgets.QWidget(self.midpanel)
        self.leftpanel.setObjectName("leftpanel")
        self.vl_leftpanel = QtWidgets.QVBoxLayout(self.leftpanel)
        self.vl_leftpanel.setContentsMargins(0, 0, 0, 0)
        self.vl_leftpanel.setSpacing(10)
        self.vl_leftpanel.setObjectName("vl_leftpanel")
        self.bScan = QtWidgets.QPushButton(self.leftpanel)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bScan.sizePolicy().hasHeightForWidth())
        self.bScan.setSizePolicy(sizePolicy)
        self.bScan.setMinimumSize(QtCore.QSize(0, 90))
        self.bScan.setStyleSheet("QPushButton {\n"
"    padding-top: 20px;\n"
"\n"
"    background-position: center top;\n"
"    background-repeat: no-repeat;\n"
"    background-origin: content;\n"
"    background-image: url(\":/scanimg.png\");\n"
" }")
        self.bScan.setIconSize(QtCore.QSize(87, 23))
        self.bScan.setObjectName("bScan")
        self.vl_leftpanel.addWidget(self.bScan)
        self.bScanPdf = QtWidgets.QPushButton(self.leftpanel)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bScanPdf.sizePolicy().hasHeightForWidth())
        self.bScanPdf.setSizePolicy(sizePolicy)
        self.bScanPdf.setMinimumSize(QtCore.QSize(0, 90))
        self.bScanPdf.setStyleSheet("QPushButton {\n"
"    padding-top: 20px;\n"
"\n"
"    background-position: center top;\n"
"    background-repeat: no-repeat;\n"
"    background-origin: content;\n"
"    background-image: url(\":/scanpdf.png\");\n"
" }")
        self.bScanPdf.setIconSize(QtCore.QSize(87, 23))
        self.bScanPdf.setAutoDefault(False)
        self.bScanPdf.setDefault(False)
        self.bScanPdf.setObjectName("bScanPdf")
        self.vl_leftpanel.addWidget(self.bScanPdf)
        spacerItem = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.vl_leftpanel.addItem(spacerItem)
        self.hl_midpanel.addWidget(self.leftpanel)
        self.rightpanel = QtWidgets.QWidget(self.midpanel)
        self.rightpanel.setObjectName("rightpanel")
        self.vl_rightpanel = QtWidgets.QVBoxLayout(self.rightpanel)
        self.vl_rightpanel.setContentsMargins(0, 0, 0, 0)
        self.vl_rightpanel.setSpacing(10)
        self.vl_rightpanel.setObjectName("vl_rightpanel")
        self.gb_quality = QtWidgets.QGroupBox(self.rightpanel)
        self.gb_quality.setMinimumSize(QtCore.QSize(0, 116))
        self.gb_quality.setFlat(False)
        self.gb_quality.setCheckable(False)
        self.gb_quality.setObjectName("gb_quality")
        self.vl_quality = QtWidgets.QVBoxLayout(self.gb_quality)
        self.vl_quality.setContentsMargins(0, 0, 0, 0)
        self.vl_quality.setSpacing(3)
        self.vl_quality.setObjectName("vl_quality")
        self.l_res = QtWidgets.QHBoxLayout()
        self.l_res.setObjectName("l_res")
        self.l2 = QtWidgets.QLabel(self.gb_quality)
        self.l2.setObjectName("l2")
        self.l_res.addWidget(self.l2)
        self.spinBox = QtWidgets.QSpinBox(self.gb_quality)
        self.spinBox.setMaximumSize(QtCore.QSize(60, 16777215))
        self.spinBox.setMinimum(100)
        self.spinBox.setMaximum(600)
        self.spinBox.setSingleStep(50)
        self.spinBox.setProperty("value", 300)
        self.spinBox.setObjectName("spinBox")
        self.l_res.addWidget(self.spinBox)
        self.vl_quality.addLayout(self.l_res)
        self.l_compr = QtWidgets.QHBoxLayout()
        self.l_compr.setObjectName("l_compr")
        self.l2_2 = QtWidgets.QLabel(self.gb_quality)
        self.l2_2.setObjectName("l2_2")
        self.l_compr.addWidget(self.l2_2)
        self.spinBox_2 = QtWidgets.QSpinBox(self.gb_quality)
        self.spinBox_2.setMaximumSize(QtCore.QSize(60, 16777215))
        self.spinBox_2.setSuffix("")
        self.spinBox_2.setMinimum(20)
        self.spinBox_2.setMaximum(95)
        self.spinBox_2.setSingleStep(5)
        self.spinBox_2.setProperty("value", 70)
        self.spinBox_2.setObjectName("spinBox_2")
        self.l_compr.addWidget(self.spinBox_2)
        self.vl_quality.addLayout(self.l_compr)
        self.colorwidget = QtWidgets.QWidget(self.gb_quality)
        self.colorwidget.setMinimumSize(QtCore.QSize(0, 30))
        self.colorwidget.setObjectName("colorwidget")
        self.hl_colorwidget = QtWidgets.QHBoxLayout(self.colorwidget)
        self.hl_colorwidget.setContentsMargins(0, 0, 0, 0)
        self.hl_colorwidget.setSpacing(4)
        self.hl_colorwidget.setObjectName("hl_colorwidget")
        self.rbColored = QtWidgets.QRadioButton(self.colorwidget)
        self.rbColored.setChecked(True)
        self.rbColored.setObjectName("rbColored")
        self.hl_colorwidget.addWidget(self.rbColored)
        self.rbGrayscale = QtWidgets.QRadioButton(self.colorwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rbGrayscale.sizePolicy().hasHeightForWidth())
        self.rbGrayscale.setSizePolicy(sizePolicy)
        self.rbGrayscale.setObjectName("rbGrayscale")
        self.hl_colorwidget.addWidget(self.rbGrayscale)
        self.vl_quality.addWidget(self.colorwidget)
        self.vl_rightpanel.addWidget(self.gb_quality)
        self.cbPostView = QtWidgets.QCheckBox(self.rightpanel)
        self.cbPostView.setObjectName("cbPostView")
        self.vl_rightpanel.addWidget(self.cbPostView)
        self.cbFeeder = QtWidgets.QCheckBox(self.rightpanel)
        self.cbFeeder.setEnabled(False)
        self.cbFeeder.setObjectName("cbFeeder")
        self.vl_rightpanel.addWidget(self.cbFeeder)
        self.cbDuplex = QtWidgets.QCheckBox(self.rightpanel)
        self.cbDuplex.setEnabled(False)
        self.cbDuplex.setStyleSheet("QCheckBox {padding-left: 12px;}")
        self.cbDuplex.setObjectName("cbDuplex")
        self.vl_rightpanel.addWidget(self.cbDuplex)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.vl_rightpanel.addItem(spacerItem1)
        self.hl_midpanel.addWidget(self.rightpanel)
        self.vl_centralwidget.addWidget(self.midpanel)
        self.botpanel = QtWidgets.QWidget(self.centralwidget)
        self.botpanel.setMinimumSize(QtCore.QSize(0, 114))
        self.botpanel.setObjectName("botpanel")
        self.vl_bottompanel = QtWidgets.QVBoxLayout(self.botpanel)
        self.vl_bottompanel.setContentsMargins(0, 0, 0, 0)
        self.vl_bottompanel.setSpacing(2)
        self.vl_bottompanel.setObjectName("vl_bottompanel")
        self.gbAutoSave = QtWidgets.QGroupBox(self.botpanel)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gbAutoSave.sizePolicy().hasHeightForWidth())
        self.gbAutoSave.setSizePolicy(sizePolicy)
        self.gbAutoSave.setCheckable(True)
        self.gbAutoSave.setObjectName("gbAutoSave")
        self.gl_autosave = QtWidgets.QGridLayout(self.gbAutoSave)
        self.gl_autosave.setContentsMargins(0, 0, 0, 0)
        self.gl_autosave.setHorizontalSpacing(10)
        self.gl_autosave.setVerticalSpacing(0)
        self.gl_autosave.setObjectName("gl_autosave")
        self.l3 = QtWidgets.QLabel(self.gbAutoSave)
        self.l3.setObjectName("l3")
        self.gl_autosave.addWidget(self.l3, 0, 0, 1, 1)
        self.bFileName = QtWidgets.QToolButton(self.gbAutoSave)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bFileName.sizePolicy().hasHeightForWidth())
        self.bFileName.setSizePolicy(sizePolicy)
        self.bFileName.setMinimumSize(QtCore.QSize(24, 24))
        self.bFileName.setObjectName("bFileName")
        self.gl_autosave.addWidget(self.bFileName, 0, 2, 1, 1)
        self.l4 = QtWidgets.QLabel(self.gbAutoSave)
        self.l4.setObjectName("l4")
        self.gl_autosave.addWidget(self.l4, 1, 0, 1, 1)
        self.eDir = QtWidgets.QLineEdit(self.gbAutoSave)
        self.eDir.setObjectName("eDir")
        self.gl_autosave.addWidget(self.eDir, 1, 1, 1, 1)
        self.bDir = QtWidgets.QToolButton(self.gbAutoSave)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bDir.sizePolicy().hasHeightForWidth())
        self.bDir.setSizePolicy(sizePolicy)
        self.bDir.setMinimumSize(QtCore.QSize(24, 24))
        self.bDir.setObjectName("bDir")
        self.gl_autosave.addWidget(self.bDir, 1, 2, 1, 1)
        self.cbFileName = QtWidgets.QComboBox(self.gbAutoSave)
        self.cbFileName.setEditable(True)
        self.cbFileName.setMaxVisibleItems(14)
        self.cbFileName.setMaxCount(20)
        self.cbFileName.setObjectName("cbFileName")
        self.gl_autosave.addWidget(self.cbFileName, 0, 1, 1, 1)
        self.vl_bottompanel.addWidget(self.gbAutoSave)
        self.l_author = QtWidgets.QLabel(self.botpanel)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.l_author.sizePolicy().hasHeightForWidth())
        self.l_author.setSizePolicy(sizePolicy)
        self.l_author.setStyleSheet("QLabel {font-style: italic;}")
        self.l_author.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.l_author.setObjectName("l_author")
        self.vl_bottompanel.addWidget(self.l_author)
        self.vl_centralwidget.addWidget(self.botpanel)
        MainWindow.setCentralWidget(self.centralwidget)
        #self.sb = QtWidgets.QStatusBar(MainWindow)
        #self.sb.setObjectName("sb")
        #MainWindow.setStatusBar(self.sb)
        self.scanaction = QtWidgets.QAction(MainWindow)
        self.scanaction.setObjectName("scanaction")

        self.retranslateUi(MainWindow, lang)
        self.bScan.clicked.connect(self.scanaction.trigger) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow, lang):
        MainWindow.setWindowTitle("Scan")
        self.l1.setText(lang.tr("scanner"))
        self.bUpdateSource.setText(lang.tr("update"))
        self.bScan.setText(lang.tr("scan"))
        self.bScanPdf.setText(lang.tr("scanpdf"))
        self.gb_quality.setTitle(lang.tr("imagequality"))
        self.l2.setText(lang.tr("resolution"))
        self.l2_2.setText(lang.tr("jpegquality"))
        self.rbColored.setText(lang.tr("colored"))
        self.rbGrayscale.setText(lang.tr("grayscale"))
        self.cbPostView.setText(lang.tr("preview"))
        self.cbFeeder.setText(lang.tr("feeder"))
        self.cbDuplex.setText(lang.tr("duplex"))
        self.gbAutoSave.setTitle(lang.tr("savedirectory"))
        self.l3.setText(lang.tr("filename"))
        self.bFileName.setText(lang.tr("list"))
        self.l4.setText(lang.tr("directory"))
        self.bDir.setText(lang.tr("browse"))
        self.l_author.setText(lang.tr("author"))
        self.scanaction.setText(lang.tr("scan"))
        self.scanaction.setShortcut("F3")
import images_rc
